#
# docker compose 服务编排
#

version: '3.4'

services:
  kong-database:
    image: 'postgres:9.6'
    container_name: kong-database
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
      - POSTGRES_PASSWORD=kong
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    volumes:
      - "db-data-kong-postgres:/var/lib/postgresql/data"
    networks:
      - goMicroIM

  # 拷贝 kong配置文件到db，没有的话不需要
#  kong-migrations:
#    image: 'kong:3.0.0'
#    environment:
#      - KONG_DATABASE=postgres
#      - KONG_PG_HOST=kong-database
#      - KONG_PG_PASSWORD=kong
#      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
#    command: kong migrations bootstrap
#    restart: on-failure
#    networks:
#      - goMicroIM
#    depends_on:
#      - kong-database

  kong:
    image: 'kong:3.0.0'
    container_name: kong
    environment:
      - LC_CTYPE=en_US.UTF-8
      - LC_ALL=en_US.UTF-8
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8443:8443'
      - '8444:8444'
    networks:
      - goMicroIM
  #    depends_on:
  #      - kong-migrations

  konga:
    image: 'pantsel/konga'
    container_name: konga
    ports:
      - '1337:1337'
    environment:
      - TOKEN_SECRET=goMicroIM
      - NODE_ENV=production
      - DB_ADAPTER=postgres
      - DB_HOST=kong-database
      - DB_PORT=5432
      - DB_USER=kong
      - DB_PASSWORD=kong
      - DB_DATABASE=konga_db
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    networks:
      - goMicroIM

volumes:
  db-data-kong-postgres:
    driver: local

networks:
  goMicroIM:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.0.0/24
          gateway: 172.16.0.1