// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: protos/wspush/constant.proto

package wspush

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 客户端类型
type IMClientType int32

const (
	IMClientType_ClientTypeDefault      IMClientType = 0 // unset
	IMClientType_ClientTypeAndroid      IMClientType = 1 // 安卓
	IMClientType_ClientTypeIos          IMClientType = 2 // iOS
	IMClientType_ClientTypeWeb          IMClientType = 3 // WebSocket
	IMClientType_ClientTypeDesktopWin   IMClientType = 4 // PC Windows
	IMClientType_ClientTypeDesktopMacos IMClientType = 5 // MAC
)

// Enum value maps for IMClientType.
var (
	IMClientType_name = map[int32]string{
		0: "ClientTypeDefault",
		1: "ClientTypeAndroid",
		2: "ClientTypeIos",
		3: "ClientTypeWeb",
		4: "ClientTypeDesktopWin",
		5: "ClientTypeDesktopMacos",
	}
	IMClientType_value = map[string]int32{
		"ClientTypeDefault":      0,
		"ClientTypeAndroid":      1,
		"ClientTypeIos":          2,
		"ClientTypeWeb":          3,
		"ClientTypeDesktopWin":   4,
		"ClientTypeDesktopMacos": 5,
	}
)

func (x IMClientType) Enum() *IMClientType {
	p := new(IMClientType)
	*p = x
	return p
}

func (x IMClientType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IMClientType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_wspush_constant_proto_enumTypes[0].Descriptor()
}

func (IMClientType) Type() protoreflect.EnumType {
	return &file_protos_wspush_constant_proto_enumTypes[0]
}

func (x IMClientType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IMClientType.Descriptor instead.
func (IMClientType) EnumDescriptor() ([]byte, []int) {
	return file_protos_wspush_constant_proto_rawDescGZIP(), []int{0}
}

// 会话类型
type IMSessionType int32

const (
	IMSessionType_SessionTypeInvalid     IMSessionType = 0 // 无效会话
	IMSessionType_SessionTypeSingle      IMSessionType = 1 // 单聊
	IMSessionType_SessionTypeNormalGroup IMSessionType = 2 // 群聊（2000人内）
	IMSessionType_SessionTypeSuperGroup  IMSessionType = 3 // 2000-100W 人超大群
)

// Enum value maps for IMSessionType.
var (
	IMSessionType_name = map[int32]string{
		0: "SessionTypeInvalid",
		1: "SessionTypeSingle",
		2: "SessionTypeNormalGroup",
		3: "SessionTypeSuperGroup",
	}
	IMSessionType_value = map[string]int32{
		"SessionTypeInvalid":     0,
		"SessionTypeSingle":      1,
		"SessionTypeNormalGroup": 2,
		"SessionTypeSuperGroup":  3,
	}
)

func (x IMSessionType) Enum() *IMSessionType {
	p := new(IMSessionType)
	*p = x
	return p
}

func (x IMSessionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IMSessionType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_wspush_constant_proto_enumTypes[1].Descriptor()
}

func (IMSessionType) Type() protoreflect.EnumType {
	return &file_protos_wspush_constant_proto_enumTypes[1]
}

func (x IMSessionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IMSessionType.Descriptor instead.
func (IMSessionType) EnumDescriptor() ([]byte, []int) {
	return file_protos_wspush_constant_proto_rawDescGZIP(), []int{1}
}

// 消息类型
type IMMsgType int32

const (
	IMMsgType_MsgTypeUnknown  IMMsgType = 0 // 未知类型消息，本地使用，发送时请勿使用
	IMMsgType_MsgTypeMix      IMMsgType = 1 // 默认图文混排类型，涵盖 text,img,video,file,voice,location 等等
	IMMsgType_MsgTypeText     IMMsgType = 2 // 纯文本，包括表情（系统内置和emoji）
	IMMsgType_MsgTypeImage    IMMsgType = 3 // 纯图片
	IMMsgType_MsgTypeAudio    IMMsgType = 4 // 纯声音(暂不支持)
	IMMsgType_MsgTypeVideo    IMMsgType = 5 // 纯视频(暂不支持)
	IMMsgType_MsgTypeFile     IMMsgType = 6 // 纯文件(暂不支持)
	IMMsgType_MsgTypeLocation IMMsgType = 7 // 纯位置(暂不支持)
	IMMsgType_MsgTypeTips     IMMsgType = 8 // 提醒类型（如入群出群通知等）
)

// Enum value maps for IMMsgType.
var (
	IMMsgType_name = map[int32]string{
		0: "MsgTypeUnknown",
		1: "MsgTypeMix",
		2: "MsgTypeText",
		3: "MsgTypeImage",
		4: "MsgTypeAudio",
		5: "MsgTypeVideo",
		6: "MsgTypeFile",
		7: "MsgTypeLocation",
		8: "MsgTypeTips",
	}
	IMMsgType_value = map[string]int32{
		"MsgTypeUnknown":  0,
		"MsgTypeMix":      1,
		"MsgTypeText":     2,
		"MsgTypeImage":    3,
		"MsgTypeAudio":    4,
		"MsgTypeVideo":    5,
		"MsgTypeFile":     6,
		"MsgTypeLocation": 7,
		"MsgTypeTips":     8,
	}
)

func (x IMMsgType) Enum() *IMMsgType {
	p := new(IMMsgType)
	*p = x
	return p
}

func (x IMMsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IMMsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_wspush_constant_proto_enumTypes[2].Descriptor()
}

func (IMMsgType) Type() protoreflect.EnumType {
	return &file_protos_wspush_constant_proto_enumTypes[2]
}

func (x IMMsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IMMsgType.Descriptor instead.
func (IMMsgType) EnumDescriptor() ([]byte, []int) {
	return file_protos_wspush_constant_proto_rawDescGZIP(), []int{2}
}

// 消息状态
type IMMsgStatus int32

const (
	IMMsgStatus_MsgStatusNone    IMMsgStatus = 0 // 默认，不能当查询条件，意义太多
	IMMsgStatus_MsgStatusUnread  IMMsgStatus = 1 // 收到消息，未读
	IMMsgStatus_MsgStatusRead    IMMsgStatus = 2 // 收到消息，已读
	IMMsgStatus_MsgStatusDeleted IMMsgStatus = 3 // 已删
	IMMsgStatus_MsgStatusSent    IMMsgStatus = 4 // 已发送
	IMMsgStatus_MsgStatusReceipt IMMsgStatus = 5 // 对方已读发送的内容
	IMMsgStatus_MsgStatusRefused IMMsgStatus = 6 // 被对方拒绝，比如被对方加入黑名单等等
	// 下面的状态仅在客户端侧使用
	IMMsgStatus_MsgStatusSending    IMMsgStatus = 20 // 发送中
	IMMsgStatus_MsgStatusDraft      IMMsgStatus = 21 // 草稿
	IMMsgStatus_MsgStatusSendCancel IMMsgStatus = 22 // 发送取消
	IMMsgStatus_MsgStatusFailed     IMMsgStatus = 23 // 发送失败
)

// Enum value maps for IMMsgStatus.
var (
	IMMsgStatus_name = map[int32]string{
		0:  "MsgStatusNone",
		1:  "MsgStatusUnread",
		2:  "MsgStatusRead",
		3:  "MsgStatusDeleted",
		4:  "MsgStatusSent",
		5:  "MsgStatusReceipt",
		6:  "MsgStatusRefused",
		20: "MsgStatusSending",
		21: "MsgStatusDraft",
		22: "MsgStatusSendCancel",
		23: "MsgStatusFailed",
	}
	IMMsgStatus_value = map[string]int32{
		"MsgStatusNone":       0,
		"MsgStatusUnread":     1,
		"MsgStatusRead":       2,
		"MsgStatusDeleted":    3,
		"MsgStatusSent":       4,
		"MsgStatusReceipt":    5,
		"MsgStatusRefused":    6,
		"MsgStatusSending":    20,
		"MsgStatusDraft":      21,
		"MsgStatusSendCancel": 22,
		"MsgStatusFailed":     23,
	}
)

func (x IMMsgStatus) Enum() *IMMsgStatus {
	p := new(IMMsgStatus)
	*p = x
	return p
}

func (x IMMsgStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IMMsgStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_wspush_constant_proto_enumTypes[3].Descriptor()
}

func (IMMsgStatus) Type() protoreflect.EnumType {
	return &file_protos_wspush_constant_proto_enumTypes[3]
}

func (x IMMsgStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IMMsgStatus.Descriptor instead.
func (IMMsgStatus) EnumDescriptor() ([]byte, []int) {
	return file_protos_wspush_constant_proto_rawDescGZIP(), []int{3}
}

// 会话状态
type IMSessionStatus int32

const (
	IMSessionStatus_SessionStatusUnknown IMSessionStatus = 0 // 未知
	IMSessionStatus_SessionStatusOk      IMSessionStatus = 1
	IMSessionStatus_SessionStatusDelete  IMSessionStatus = 2
)

// Enum value maps for IMSessionStatus.
var (
	IMSessionStatus_name = map[int32]string{
		0: "SessionStatusUnknown",
		1: "SessionStatusOk",
		2: "SessionStatusDelete",
	}
	IMSessionStatus_value = map[string]int32{
		"SessionStatusUnknown": 0,
		"SessionStatusOk":      1,
		"SessionStatusDelete":  2,
	}
)

func (x IMSessionStatus) Enum() *IMSessionStatus {
	p := new(IMSessionStatus)
	*p = x
	return p
}

func (x IMSessionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IMSessionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_wspush_constant_proto_enumTypes[4].Descriptor()
}

func (IMSessionStatus) Type() protoreflect.EnumType {
	return &file_protos_wspush_constant_proto_enumTypes[4]
}

func (x IMSessionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IMSessionStatus.Descriptor instead.
func (IMSessionStatus) EnumDescriptor() ([]byte, []int) {
	return file_protos_wspush_constant_proto_rawDescGZIP(), []int{4}
}

// 消息属性
type IMMsgFeature int32

const (
	IMMsgFeature_MsgFeatureDefault  IMMsgFeature = 0 // 默认
	IMMsgFeature_MsgFeatureLeaveMsg IMMsgFeature = 1 // 离线消息(和漫游消息有何区别)
	IMMsgFeature_MsgFeatureRoamMsg  IMMsgFeature = 2 // 漫游消息，多端同步接收，永久存储(或1年)
	IMMsgFeature_MsgFeatureSyncMsg  IMMsgFeature = 3 // 同步消息
)

// Enum value maps for IMMsgFeature.
var (
	IMMsgFeature_name = map[int32]string{
		0: "MsgFeatureDefault",
		1: "MsgFeatureLeaveMsg",
		2: "MsgFeatureRoamMsg",
		3: "MsgFeatureSyncMsg",
	}
	IMMsgFeature_value = map[string]int32{
		"MsgFeatureDefault":  0,
		"MsgFeatureLeaveMsg": 1,
		"MsgFeatureRoamMsg":  2,
		"MsgFeatureSyncMsg":  3,
	}
)

func (x IMMsgFeature) Enum() *IMMsgFeature {
	p := new(IMMsgFeature)
	*p = x
	return p
}

func (x IMMsgFeature) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IMMsgFeature) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_wspush_constant_proto_enumTypes[5].Descriptor()
}

func (IMMsgFeature) Type() protoreflect.EnumType {
	return &file_protos_wspush_constant_proto_enumTypes[5]
}

func (x IMMsgFeature) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IMMsgFeature.Descriptor instead.
func (IMMsgFeature) EnumDescriptor() ([]byte, []int) {
	return file_protos_wspush_constant_proto_rawDescGZIP(), []int{5}
}

// 消息错误码
type IMResCode int32

const (
	IMResCode_ResCodeUnknown       IMResCode = 0 // unknown
	IMResCode_ResCodeOk            IMResCode = 1 // 一切正常
	IMResCode_ResCodeError         IMResCode = 2 // 服务器内部错误
	IMResCode_ResCodeGroupNotExist IMResCode = 3 // 群不存在
)

// Enum value maps for IMResCode.
var (
	IMResCode_name = map[int32]string{
		0: "ResCodeUnknown",
		1: "ResCodeOk",
		2: "ResCodeError",
		3: "ResCodeGroupNotExist",
	}
	IMResCode_value = map[string]int32{
		"ResCodeUnknown":       0,
		"ResCodeOk":            1,
		"ResCodeError":         2,
		"ResCodeGroupNotExist": 3,
	}
)

func (x IMResCode) Enum() *IMResCode {
	p := new(IMResCode)
	*p = x
	return p
}

func (x IMResCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IMResCode) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_wspush_constant_proto_enumTypes[6].Descriptor()
}

func (IMResCode) Type() protoreflect.EnumType {
	return &file_protos_wspush_constant_proto_enumTypes[6]
}

func (x IMResCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IMResCode.Descriptor instead.
func (IMResCode) EnumDescriptor() ([]byte, []int) {
	return file_protos_wspush_constant_proto_rawDescGZIP(), []int{6}
}

var File_protos_wspush_constant_proto protoreflect.FileDescriptor

var file_protos_wspush_constant_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x77, 0x73, 0x70, 0x75, 0x73, 0x68, 0x2f,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x77, 0x73, 0x70, 0x75, 0x73, 0x68, 0x2a, 0x98, 0x01, 0x0a, 0x0c, 0x49, 0x4d, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x6f, 0x73, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x57, 0x65, 0x62, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70,
	0x57, 0x69, 0x6e, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x4d, 0x61, 0x63, 0x6f, 0x73, 0x10,
	0x05, 0x2a, 0x75, 0x0a, 0x0d, 0x49, 0x4d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x10,
	0x01, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x02, 0x12, 0x19, 0x0a,
	0x15, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x75, 0x70, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x03, 0x2a, 0xad, 0x01, 0x0a, 0x09, 0x49, 0x4d, 0x4d,
	0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x69, 0x78, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x54, 0x65, 0x78, 0x74, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x4d,
	0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x10, 0x03, 0x12, 0x10, 0x0a,
	0x0c, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x10, 0x04, 0x12,
	0x10, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x10,
	0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x54, 0x69, 0x70, 0x73, 0x10, 0x08, 0x2a, 0xf5, 0x01, 0x0a, 0x0b, 0x49, 0x4d, 0x4d,
	0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x73, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x4d,
	0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x10, 0x01,
	0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61,
	0x64, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x73, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10,
	0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x66, 0x75, 0x73, 0x65, 0x64, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x73, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x14, 0x12, 0x12,
	0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x10, 0x15, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53,
	0x65, 0x6e, 0x64, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x10, 0x16, 0x12, 0x13, 0x0a, 0x0f, 0x4d,
	0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x17,
	0x2a, 0x59, 0x0a, 0x0f, 0x49, 0x4d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x13, 0x0a,
	0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x6b,
	0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x02, 0x2a, 0x6b, 0x0a, 0x0c, 0x49,
	0x4d, 0x4d, 0x73, 0x67, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x4d,
	0x73, 0x67, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x73, 0x67, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x4d, 0x73, 0x67, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x73,
	0x67, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x6f, 0x61, 0x6d, 0x4d, 0x73, 0x67, 0x10,
	0x02, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,
	0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67, 0x10, 0x03, 0x2a, 0x5a, 0x0a, 0x09, 0x49, 0x4d, 0x52, 0x65,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x65, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x4f, 0x6b, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x65,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x10, 0x03, 0x42, 0x66, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x69, 0x6d, 0x2e, 0x6c, 0x69, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x77, 0x73, 0x70, 0x75, 0x73, 0x68, 0x42, 0x0e, 0x57, 0x53, 0x50, 0x75, 0x73, 0x68, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x69, 0x6d, 0x2f, 0x67, 0x6f,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x69, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x77,
	0x73, 0x70, 0x75, 0x73, 0x68, 0x3b, 0x77, 0x73, 0x70, 0x75, 0x73, 0x68, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_wspush_constant_proto_rawDescOnce sync.Once
	file_protos_wspush_constant_proto_rawDescData = file_protos_wspush_constant_proto_rawDesc
)

func file_protos_wspush_constant_proto_rawDescGZIP() []byte {
	file_protos_wspush_constant_proto_rawDescOnce.Do(func() {
		file_protos_wspush_constant_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_wspush_constant_proto_rawDescData)
	})
	return file_protos_wspush_constant_proto_rawDescData
}

var file_protos_wspush_constant_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_protos_wspush_constant_proto_goTypes = []interface{}{
	(IMClientType)(0),    // 0: wspush.IMClientType
	(IMSessionType)(0),   // 1: wspush.IMSessionType
	(IMMsgType)(0),       // 2: wspush.IMMsgType
	(IMMsgStatus)(0),     // 3: wspush.IMMsgStatus
	(IMSessionStatus)(0), // 4: wspush.IMSessionStatus
	(IMMsgFeature)(0),    // 5: wspush.IMMsgFeature
	(IMResCode)(0),       // 6: wspush.IMResCode
}
var file_protos_wspush_constant_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protos_wspush_constant_proto_init() }
func file_protos_wspush_constant_proto_init() {
	if File_protos_wspush_constant_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_wspush_constant_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_wspush_constant_proto_goTypes,
		DependencyIndexes: file_protos_wspush_constant_proto_depIdxs,
		EnumInfos:         file_protos_wspush_constant_proto_enumTypes,
	}.Build()
	File_protos_wspush_constant_proto = out.File
	file_protos_wspush_constant_proto_rawDesc = nil
	file_protos_wspush_constant_proto_goTypes = nil
	file_protos_wspush_constant_proto_depIdxs = nil
}
