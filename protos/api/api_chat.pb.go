// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: protos/api/api_chat.proto

package api

import (
	wspush "github.com/gomicroim/gomicroim/protos/wspush"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 发送消息请求
type SendMsgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// int64 from = 1;            // 消息发送方（从token中解析）
	To      *wspush.IMMsg_Peer `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`                                                 // 消息接受方，单聊用户ID，群聊群ID
	MsgUuid string             `protobuf:"bytes,2,opt,name=msg_uuid,json=msgUuid,proto3" json:"msg_uuid,omitempty"`                        // 唯一消息ID，客户端生成（UUID）
	MsgType wspush.IMMsgType   `protobuf:"varint,3,opt,name=msg_type,json=msgType,proto3,enum=wspush.IMMsgType" json:"msg_type,omitempty"` // 消息类型
	MsgData string             `protobuf:"bytes,4,opt,name=msg_data,json=msgData,proto3" json:"msg_data,omitempty"`                        // 消息内容
}

func (x *SendMsgRequest) Reset() {
	*x = SendMsgRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_api_api_chat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsgRequest) ProtoMessage() {}

func (x *SendMsgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_api_api_chat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsgRequest.ProtoReflect.Descriptor instead.
func (*SendMsgRequest) Descriptor() ([]byte, []int) {
	return file_protos_api_api_chat_proto_rawDescGZIP(), []int{0}
}

func (x *SendMsgRequest) GetTo() *wspush.IMMsg_Peer {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *SendMsgRequest) GetMsgUuid() string {
	if x != nil {
		return x.MsgUuid
	}
	return ""
}

func (x *SendMsgRequest) GetMsgType() wspush.IMMsgType {
	if x != nil {
		return x.MsgType
	}
	return wspush.IMMsgType(0)
}

func (x *SendMsgRequest) GetMsgData() string {
	if x != nil {
		return x.MsgData
	}
	return ""
}

// 发送消息响应
type SendMsgReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgSeq  int64            `protobuf:"varint,1,opt,name=msg_seq,json=msgSeq,proto3" json:"msg_seq,omitempty"`                          // 服务端生成的消息序号
	ResCode wspush.IMResCode `protobuf:"varint,2,opt,name=res_code,json=resCode,proto3,enum=wspush.IMResCode" json:"res_code,omitempty"` // 错误码
	MsgInfo *wspush.IMMsg    `protobuf:"bytes,3,opt,name=msg_info,json=msgInfo,proto3" json:"msg_info,omitempty"`                        // 完整消息内容
}

func (x *SendMsgReply) Reset() {
	*x = SendMsgReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_api_api_chat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsgReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsgReply) ProtoMessage() {}

func (x *SendMsgReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_api_api_chat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsgReply.ProtoReflect.Descriptor instead.
func (*SendMsgReply) Descriptor() ([]byte, []int) {
	return file_protos_api_api_chat_proto_rawDescGZIP(), []int{1}
}

func (x *SendMsgReply) GetMsgSeq() int64 {
	if x != nil {
		return x.MsgSeq
	}
	return 0
}

func (x *SendMsgReply) GetResCode() wspush.IMResCode {
	if x != nil {
		return x.ResCode
	}
	return wspush.IMResCode(0)
}

func (x *SendMsgReply) GetMsgInfo() *wspush.IMMsg {
	if x != nil {
		return x.MsgInfo
	}
	return nil
}

// 同步消息请求
type SyncMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member   string `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
	LastRead int64  `protobuf:"varint,2,opt,name=last_read,json=lastRead,proto3" json:"last_read,omitempty"`
	Count    int32  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *SyncMessageRequest) Reset() {
	*x = SyncMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_api_api_chat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMessageRequest) ProtoMessage() {}

func (x *SyncMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_api_api_chat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMessageRequest.ProtoReflect.Descriptor instead.
func (*SyncMessageRequest) Descriptor() ([]byte, []int) {
	return file_protos_api_api_chat_proto_rawDescGZIP(), []int{2}
}

func (x *SyncMessageRequest) GetMember() string {
	if x != nil {
		return x.Member
	}
	return ""
}

func (x *SyncMessageRequest) GetLastRead() int64 {
	if x != nil {
		return x.LastRead
	}
	return 0
}

func (x *SyncMessageRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 同步消息响应
type SyncMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LatestSeq       int64                             `protobuf:"varint,1,opt,name=latest_seq,json=latestSeq,proto3" json:"latest_seq,omitempty"`                       // 最新的消息序号
	EntrySetLastSeq int64                             `protobuf:"varint,2,opt,name=entry_set_last_seq,json=entrySetLastSeq,proto3" json:"entry_set_last_seq,omitempty"` // entry_set 中最后的序号值
	EntrySet        []*SyncMessageReply_TimelineEntry `protobuf:"bytes,3,rep,name=entry_set,json=entrySet,proto3" json:"entry_set,omitempty"`                           // 如果拉取到的结果为空，说明同步完成
}

func (x *SyncMessageReply) Reset() {
	*x = SyncMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_api_api_chat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMessageReply) ProtoMessage() {}

func (x *SyncMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_api_api_chat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMessageReply.ProtoReflect.Descriptor instead.
func (*SyncMessageReply) Descriptor() ([]byte, []int) {
	return file_protos_api_api_chat_proto_rawDescGZIP(), []int{3}
}

func (x *SyncMessageReply) GetLatestSeq() int64 {
	if x != nil {
		return x.LatestSeq
	}
	return 0
}

func (x *SyncMessageReply) GetEntrySetLastSeq() int64 {
	if x != nil {
		return x.EntrySetLastSeq
	}
	return 0
}

func (x *SyncMessageReply) GetEntrySet() []*SyncMessageReply_TimelineEntry {
	if x != nil {
		return x.EntrySet
	}
	return nil
}

// 最近聊天会话列表请求
type GetRecentSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LatestUpdateTime uint32 `protobuf:"varint,2,opt,name=latest_update_time,json=latestUpdateTime,proto3" json:"latest_update_time,omitempty"` // 最后更新时间
}

func (x *GetRecentSessionRequest) Reset() {
	*x = GetRecentSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_api_api_chat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecentSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentSessionRequest) ProtoMessage() {}

func (x *GetRecentSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_api_api_chat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentSessionRequest.ProtoReflect.Descriptor instead.
func (*GetRecentSessionRequest) Descriptor() ([]byte, []int) {
	return file_protos_api_api_chat_proto_rawDescGZIP(), []int{4}
}

func (x *GetRecentSessionRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetRecentSessionRequest) GetLatestUpdateTime() uint32 {
	if x != nil {
		return x.LatestUpdateTime
	}
	return 0
}

// 最近聊天会话列表响应
type GetRecentSessionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       uint64              `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UnreadCounts uint32              `protobuf:"varint,2,opt,name=unread_counts,json=unreadCounts,proto3" json:"unread_counts,omitempty"` // 总未读数量
	SessionList  []*wspush.IMSession `protobuf:"bytes,3,rep,name=session_list,json=sessionList,proto3" json:"session_list,omitempty"`     // 会话列表
}

func (x *GetRecentSessionReply) Reset() {
	*x = GetRecentSessionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_api_api_chat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecentSessionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentSessionReply) ProtoMessage() {}

func (x *GetRecentSessionReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_api_api_chat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentSessionReply.ProtoReflect.Descriptor instead.
func (*GetRecentSessionReply) Descriptor() ([]byte, []int) {
	return file_protos_api_api_chat_proto_rawDescGZIP(), []int{5}
}

func (x *GetRecentSessionReply) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetRecentSessionReply) GetUnreadCounts() uint32 {
	if x != nil {
		return x.UnreadCounts
	}
	return 0
}

func (x *GetRecentSessionReply) GetSessionList() []*wspush.IMSession {
	if x != nil {
		return x.SessionList
	}
	return nil
}

// 消息已读回复请求（我方）
type MsgReadAckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      uint64               `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 消息发送方
	SessionId   uint64               `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	MsgId       uint64               `protobuf:"varint,3,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"` // 服务器消息ID，在该ID之前的所有消息被标记为已读
	SessionType wspush.IMSessionType `protobuf:"varint,4,opt,name=session_type,json=sessionType,proto3,enum=wspush.IMSessionType" json:"session_type,omitempty"`
}

func (x *MsgReadAckRequest) Reset() {
	*x = MsgReadAckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_api_api_chat_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgReadAckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgReadAckRequest) ProtoMessage() {}

func (x *MsgReadAckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_api_api_chat_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgReadAckRequest.ProtoReflect.Descriptor instead.
func (*MsgReadAckRequest) Descriptor() ([]byte, []int) {
	return file_protos_api_api_chat_proto_rawDescGZIP(), []int{6}
}

func (x *MsgReadAckRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MsgReadAckRequest) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *MsgReadAckRequest) GetMsgId() uint64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (x *MsgReadAckRequest) GetSessionType() wspush.IMSessionType {
	if x != nil {
		return x.SessionType
	}
	return wspush.IMSessionType(0)
}

// 消息已读回复响应
type MsgReadAckReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgReadAckReply) Reset() {
	*x = MsgReadAckReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_api_api_chat_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgReadAckReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgReadAckReply) ProtoMessage() {}

func (x *MsgReadAckReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_api_api_chat_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgReadAckReply.ProtoReflect.Descriptor instead.
func (*MsgReadAckReply) Descriptor() ([]byte, []int) {
	return file_protos_api_api_chat_proto_rawDescGZIP(), []int{7}
}

// 历史离线聊天消息请求
type GetMsgListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId     string `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`              // 对方ID，单聊userId，群聊groupId
	MsgSeq     int64  `protobuf:"varint,2,opt,name=msg_seq,json=msgSeq,proto3" json:"msg_seq,omitempty"`             // 起始消息序号(不包含在查询结果中)
	IsForward  bool   `protobuf:"varint,3,opt,name=is_forward,json=isForward,proto3" json:"is_forward,omitempty"`    // true: 向前扫描 false: 向后扫描
	LimitCount int32  `protobuf:"varint,4,opt,name=limit_count,json=limitCount,proto3" json:"limit_count,omitempty"` // 本次查询消息的条数上线(最多100条)
}

func (x *GetMsgListRequest) Reset() {
	*x = GetMsgListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_api_api_chat_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMsgListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMsgListRequest) ProtoMessage() {}

func (x *GetMsgListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_api_api_chat_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMsgListRequest.ProtoReflect.Descriptor instead.
func (*GetMsgListRequest) Descriptor() ([]byte, []int) {
	return file_protos_api_api_chat_proto_rawDescGZIP(), []int{8}
}

func (x *GetMsgListRequest) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *GetMsgListRequest) GetMsgSeq() int64 {
	if x != nil {
		return x.MsgSeq
	}
	return 0
}

func (x *GetMsgListRequest) GetIsForward() bool {
	if x != nil {
		return x.IsForward
	}
	return false
}

func (x *GetMsgListRequest) GetLimitCount() int32 {
	if x != nil {
		return x.LimitCount
	}
	return 0
}

//对于群而言，如果消息数目返回的数值小于请求的cnt,则表示群的消息能拉取的到头了，更早的消息没有权限拉取。
//如果limit_count 和 msg_list.count 不一致，说明服务器消息有缺失，需要
//客户端做一个缺失标记，避免下次再次拉取。
type GetMsgListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndMsgSeq int64           `protobuf:"varint,1,opt,name=end_msg_seq,json=endMsgSeq,proto3" json:"end_msg_seq,omitempty"` // 结束消息序号(不包含在查询结果中)
	MsgList   []*wspush.IMMsg `protobuf:"bytes,2,rep,name=msg_list,json=msgList,proto3" json:"msg_list,omitempty"`          // 消息列表
}

func (x *GetMsgListReply) Reset() {
	*x = GetMsgListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_api_api_chat_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMsgListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMsgListReply) ProtoMessage() {}

func (x *GetMsgListReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_api_api_chat_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMsgListReply.ProtoReflect.Descriptor instead.
func (*GetMsgListReply) Descriptor() ([]byte, []int) {
	return file_protos_api_api_chat_proto_rawDescGZIP(), []int{9}
}

func (x *GetMsgListReply) GetEndMsgSeq() int64 {
	if x != nil {
		return x.EndMsgSeq
	}
	return 0
}

func (x *GetMsgListReply) GetMsgList() []*wspush.IMMsg {
	if x != nil {
		return x.MsgList
	}
	return nil
}

type SyncMessageReply_TimelineEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence int64         `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Message  *wspush.IMMsg `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SyncMessageReply_TimelineEntry) Reset() {
	*x = SyncMessageReply_TimelineEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_api_api_chat_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncMessageReply_TimelineEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMessageReply_TimelineEntry) ProtoMessage() {}

func (x *SyncMessageReply_TimelineEntry) ProtoReflect() protoreflect.Message {
	mi := &file_protos_api_api_chat_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMessageReply_TimelineEntry.ProtoReflect.Descriptor instead.
func (*SyncMessageReply_TimelineEntry) Descriptor() ([]byte, []int) {
	return file_protos_api_api_chat_proto_rawDescGZIP(), []int{3, 0}
}

func (x *SyncMessageReply_TimelineEntry) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *SyncMessageReply_TimelineEntry) GetMessage() *wspush.IMMsg {
	if x != nil {
		return x.Message
	}
	return nil
}

var File_protos_api_api_chat_proto protoreflect.FileDescriptor

var file_protos_api_api_chat_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69,
	0x5f, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x77, 0x73, 0x70, 0x75, 0x73, 0x68, 0x2f, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x77, 0x73, 0x70, 0x75, 0x73, 0x68, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x73, 0x70, 0x75, 0x73, 0x68, 0x2e, 0x49,
	0x4d, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x73, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x77, 0x73, 0x70,
	0x75, 0x73, 0x68, 0x2e, 0x49, 0x4d, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6d,
	0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x7f, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x53, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x77,
	0x73, 0x70, 0x75, 0x73, 0x68, 0x2e, 0x49, 0x4d, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x07, 0x72, 0x65, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x73, 0x70,
	0x75, 0x73, 0x68, 0x2e, 0x49, 0x4d, 0x4d, 0x73, 0x67, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x5f, 0x0a, 0x12, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0xf6, 0x01, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x53, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x12, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x73,
	0x74, 0x53, 0x65, 0x71, 0x12, 0x40, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x73, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x79,
	0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x53, 0x65, 0x74, 0x1a, 0x54, 0x0a, 0x0d, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x73, 0x70, 0x75, 0x73, 0x68, 0x2e, 0x49, 0x4d,
	0x4d, 0x73, 0x67, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x60, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8b,
	0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77,
	0x73, 0x70, 0x75, 0x73, 0x68, 0x2e, 0x49, 0x4d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x9c, 0x01, 0x0a,
	0x11, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x61, 0x64, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49,
	0x64, 0x12, 0x38, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x77, 0x73, 0x70, 0x75, 0x73, 0x68,
	0x2e, 0x49, 0x4d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x61, 0x64, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x85,
	0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6d, 0x73, 0x67, 0x53, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0b, 0x65, 0x6e, 0x64,
	0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x08, 0x6d, 0x73, 0x67,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x73,
	0x70, 0x75, 0x73, 0x68, 0x2e, 0x49, 0x4d, 0x4d, 0x73, 0x67, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x32, 0xa8, 0x01, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74, 0x12, 0x49, 0x0a, 0x04,
	0x53, 0x65, 0x6e, 0x64, 0x12, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x6d, 0x73, 0x67, 0x2f,
	0x73, 0x65, 0x6e, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x55, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e,
	0x2f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x32, 0xc7,
	0x01, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x63, 0x68, 0x61,
	0x74, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x58,
	0x0a, 0x0d, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x73, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x61, 0x64, 0x41, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x61, 0x64, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x6d, 0x73, 0x67,
	0x2f, 0x72, 0x65, 0x61, 0x64, 0x3a, 0x01, 0x2a, 0x32, 0x5d, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x6d,
	0x73, 0x67, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x56, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x67,
	0x6f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x69, 0x6d, 0x2e, 0x6c, 0x69, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x42, 0x07, 0x41, 0x70, 0x69, 0x43, 0x68, 0x61, 0x74,
	0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x69, 0x6d, 0x2f, 0x67, 0x6f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x69, 0x6d,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x61, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_api_api_chat_proto_rawDescOnce sync.Once
	file_protos_api_api_chat_proto_rawDescData = file_protos_api_api_chat_proto_rawDesc
)

func file_protos_api_api_chat_proto_rawDescGZIP() []byte {
	file_protos_api_api_chat_proto_rawDescOnce.Do(func() {
		file_protos_api_api_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_api_api_chat_proto_rawDescData)
	})
	return file_protos_api_api_chat_proto_rawDescData
}

var file_protos_api_api_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_protos_api_api_chat_proto_goTypes = []interface{}{
	(*SendMsgRequest)(nil),                 // 0: api.SendMsgRequest
	(*SendMsgReply)(nil),                   // 1: api.SendMsgReply
	(*SyncMessageRequest)(nil),             // 2: api.SyncMessageRequest
	(*SyncMessageReply)(nil),               // 3: api.SyncMessageReply
	(*GetRecentSessionRequest)(nil),        // 4: api.GetRecentSessionRequest
	(*GetRecentSessionReply)(nil),          // 5: api.GetRecentSessionReply
	(*MsgReadAckRequest)(nil),              // 6: api.MsgReadAckRequest
	(*MsgReadAckReply)(nil),                // 7: api.MsgReadAckReply
	(*GetMsgListRequest)(nil),              // 8: api.GetMsgListRequest
	(*GetMsgListReply)(nil),                // 9: api.GetMsgListReply
	(*SyncMessageReply_TimelineEntry)(nil), // 10: api.SyncMessageReply.TimelineEntry
	(*wspush.IMMsg_Peer)(nil),              // 11: wspush.IMMsg.Peer
	(wspush.IMMsgType)(0),                  // 12: wspush.IMMsgType
	(wspush.IMResCode)(0),                  // 13: wspush.IMResCode
	(*wspush.IMMsg)(nil),                   // 14: wspush.IMMsg
	(*wspush.IMSession)(nil),               // 15: wspush.IMSession
	(wspush.IMSessionType)(0),              // 16: wspush.IMSessionType
}
var file_protos_api_api_chat_proto_depIdxs = []int32{
	11, // 0: api.SendMsgRequest.to:type_name -> wspush.IMMsg.Peer
	12, // 1: api.SendMsgRequest.msg_type:type_name -> wspush.IMMsgType
	13, // 2: api.SendMsgReply.res_code:type_name -> wspush.IMResCode
	14, // 3: api.SendMsgReply.msg_info:type_name -> wspush.IMMsg
	10, // 4: api.SyncMessageReply.entry_set:type_name -> api.SyncMessageReply.TimelineEntry
	15, // 5: api.GetRecentSessionReply.session_list:type_name -> wspush.IMSession
	16, // 6: api.MsgReadAckRequest.session_type:type_name -> wspush.IMSessionType
	14, // 7: api.GetMsgListReply.msg_list:type_name -> wspush.IMMsg
	14, // 8: api.SyncMessageReply.TimelineEntry.message:type_name -> wspush.IMMsg
	0,  // 9: api.Chat.Send:input_type -> api.SendMsgRequest
	2,  // 10: api.Chat.SyncMessage:input_type -> api.SyncMessageRequest
	4,  // 11: api.Session.GetSession:input_type -> api.GetRecentSessionRequest
	6,  // 12: api.Session.ReadMsgNotify:input_type -> api.MsgReadAckRequest
	8,  // 13: api.MsgList.GetMsgList:input_type -> api.GetMsgListRequest
	1,  // 14: api.Chat.Send:output_type -> api.SendMsgReply
	3,  // 15: api.Chat.SyncMessage:output_type -> api.SyncMessageReply
	5,  // 16: api.Session.GetSession:output_type -> api.GetRecentSessionReply
	7,  // 17: api.Session.ReadMsgNotify:output_type -> api.MsgReadAckReply
	9,  // 18: api.MsgList.GetMsgList:output_type -> api.GetMsgListReply
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_protos_api_api_chat_proto_init() }
func file_protos_api_api_chat_proto_init() {
	if File_protos_api_api_chat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_api_api_chat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsgRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_api_api_chat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsgReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_api_api_chat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_api_api_chat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_api_api_chat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecentSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_api_api_chat_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecentSessionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_api_api_chat_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgReadAckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_api_api_chat_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgReadAckReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_api_api_chat_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMsgListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_api_api_chat_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMsgListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_api_api_chat_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncMessageReply_TimelineEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_api_api_chat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_protos_api_api_chat_proto_goTypes,
		DependencyIndexes: file_protos_api_api_chat_proto_depIdxs,
		MessageInfos:      file_protos_api_api_chat_proto_msgTypes,
	}.Build()
	File_protos_api_api_chat_proto = out.File
	file_protos_api_api_chat_proto_rawDesc = nil
	file_protos_api_api_chat_proto_goTypes = nil
	file_protos_api_api_chat_proto_depIdxs = nil
}
